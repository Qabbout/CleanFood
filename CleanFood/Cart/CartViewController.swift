//
//  CartViewController.swift
//  CleanFood
//
//  Created by Abdulrahman on 4/19/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class CartViewController: UICollectionViewController, CartDisplayConfiguration {

    var currentItemIndex: Int = 0


    var interactor: CartInteractorConfiguration?
    var router: (NSObjectProtocol & CartRoutingConfiguration & CartDataPassing)?

    var items: Items? {
        didSet {
            DispatchQueue.main.async { [weak self] in
                self?.collectionView.reloadData()

            }
        }

    }

    private let floatingActionButton: UIButton = {
        let button = UIButton()
        button.layer.masksToBounds = false
        button.layer.cornerRadius = 30
        button.backgroundColor = .white
        button.setImage(UIImage(systemName: "creditcard.fill"), for: .normal)
        button.tintColor = .black
        button.layer.shadowRadius = 5
        button.layer.shadowOpacity = 0.2
        button.layer.shadowOffset = .zero
        button.layer.shadowColor = UIColor.black.cgColor
        button.layer.shouldRasterize = true
        button.layer.rasterizationScale = UIScreen.main.scale
        return button
    }()



    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        floatingActionButton.frame = .init(x: view.frame.width - 60 - 20, y: view.frame.height - 100, width: 60, height: 60)
    }


    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.items = router?.dataStore?.items
        addFAB()


    }
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.navigationBar.isHidden = false
        navigationController?.navigationBar.backItem?.title = "Menu"
        navigationController?.navigationBar.tintColor = .black
        collectionView.contentInsetAdjustmentBehavior = .automatic

    }
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        navigationController?.navigationBar.isHidden = true
    }

    private func addFAB() {
        view.addSubview(floatingActionButton)

    }

//
//    func interactorRequestCategories() {
//        let request = Home.RequestCategories()
//        interactor?.workerGetCategories(request: request)
//    }
//
//    func interactorRequestItemsOfCategory(categoryIndexString: String = "1") {
//        let request = Home.RequestItemsOfACategory(at: categoryIndexString)
//        interactor?.workerGetItemsOfACategory(request: request)
//    }

    // MARK: - display view model from HomePresenter

//    func displayCategories(viewModel: Home.ViewModelCategories) {
//        self.categories = viewModel.categories
//    }
//
//    func displayItemsOfACategory(viewModel: Home.ViewModelItemsOfACategory) {
//        self.items = viewModel.items
//    }


}


// MARK: CollectionView Medthods

extension CartViewController: UICollectionViewDelegateFlowLayout {


    override func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        1
    }
    override func numberOfSections(in collectionView: UICollectionView) -> Int {
        3
    }

    override func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {

        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "carts", for: indexPath) as! CartsCollectionViewCell
        cell.items = self.items
        return cell
//        switch indexPath.section {
//            case 0:
//                let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "mainCarousel", for: indexPath) as! CarouselMainCollectionViewCell
//
//                return cell
//
//            case 1:
//                let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "menuCell", for: indexPath) as! MenuCollectionViewCell
//                cell.categories = self.categories
//                cell.items = self.items
//                return cell
//
//            default:
//                return UICollectionViewCell.init()
//        }

    }

    func getIndexAndNotify() {
        guard let cell = collectionView.visibleCells.first else { return }
        let indexPath = collectionView.indexPath(for: cell)
        if indexPath?.section != currentItemIndex {
            currentItemIndex = indexPath?.section ?? currentItemIndex
            NotificationCenter.default
                .post(name: NSNotification.Name("sections"),
                      object: indexPath?.section) }
    }



    override func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {
        getIndexAndNotify()
    }

    override func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) {
        getIndexAndNotify()
    }





}
